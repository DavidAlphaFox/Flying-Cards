{"version":3,"sources":["index.js"],"names":["cards","to","i","x","y","scale","rot","Math","random","delay","trans","r","s","zi","Deck","properties","useState","Set","gone","setGone","useSprings","length","from","zIndex","props","set","useEffect","setA","setB","_difference","elem","delete","difference","data","has","immediate","clear","all_cards","window","innerWidth","config","friction","tension","console","log","bind","useDrag","index","args","down","xDelta","movement","xDir","distance","direction","velocity","dir","add","ws","send","JSON","stringify","String","name","isGone","undefined","size","map","div","key","style","transform","interpolate","backgroundImage","Panel","state","button_type","this","return_value","document","getElementById","value","setState","channel_name","parseInt","try_to_connect","className","onClick","handel_button_click","id","onChange","handel_input_change","React","Component","Controller","update_back_number","back_number","connected","channel","path","close","error","WebSocket","onopen","onmessage","evt","parse","message","startsWith","number","split","to_int","onclose","Fragment","render"],"mappings":"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","file":"static/js/main.c6941681.chunk.js","sourcesContent":["import { render } from 'react-dom'\nimport React, { useState, useEffect } from 'react'\nimport { useSprings, animated, interpolate } from 'react-spring'\nimport { useDrag } from 'react-use-gesture'\nimport './styles.css'\n\nfunction difference(setA, setB) {\n  let _difference = new Set(setA)\n  for (let elem of setB) {\n      _difference.delete(elem)\n  }\n  return _difference\n}\n\nfunction to_int(setA) {\n  let _difference = new Set()\n  for (let elem of setA) {\n      _difference.add(parseInt(elem))\n  }\n  return _difference\n}\n\nconst cards = [\n  'https://upload.wikimedia.org/wikipedia/en/f/f5/RWS_Tarot_08_Strength.jpg',\n  'https://upload.wikimedia.org/wikipedia/en/5/53/RWS_Tarot_16_Tower.jpg',\n  'https://upload.wikimedia.org/wikipedia/en/9/9b/RWS_Tarot_07_Chariot.jpg',\n  'https://upload.wikimedia.org/wikipedia/en/d/db/RWS_Tarot_06_Lovers.jpg',\n  'https://upload.wikimedia.org/wikipedia/en/thumb/8/88/RWS_Tarot_02_High_Priestess.jpg/690px-RWS_Tarot_02_High_Priestess.jpg',\n  'https://upload.wikimedia.org/wikipedia/en/d/de/RWS_Tarot_01_Magician.jpg'\n]\n\n\nconst to = i => ({ x: 0, y: i * -4, scale: 1, rot: -10 + Math.random() * 20, delay: i * 100 })\nconst clear_pos = i => ({x: -((100 + window.innerWidth)), config: { friction: 50, tension: 200} })\nconst from = i => ({ x: 0, rot: 0, scale: 1.5, y: -1000, zIndex: 0  })\n\nconst trans = (r, s) => `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`\nlet zi = 1\n\nfunction Deck(properties) {\n  const [gone, setGone] = useState(() => new Set())\n  const [props, set] = useSprings(cards.length, i => ({ ...to(i), from: from(i) }))\n  \n  useEffect(() => {\n    setGone(difference(gone, properties.data))\n    set(i => properties.data.has(i)? {immediate: true, zIndex: ++zi}:{})\n    set(i => properties.data.has(i)? to(i):{})\n  }, [properties.data])\n\n  useEffect(() => {\n    if (properties.clear) {\n      let all_cards = new Set([5,4,3,2,1,0])\n      setGone(() => all_cards)\n      set(i => all_cards.has(i)? clear_pos(i):{})\n      console.log('clear')\n    }\n\n  }, [properties.clear])\n\n\n  const bind = useDrag(({ args: [index], down, movement: [xDelta], distance, direction: [xDir], velocity }) => {\n    const trigger = velocity > 0.2 \n    const dir = xDir < 0 ? -1 : 1\n    if (!down && trigger) {\n      gone.add(index)\n      if (properties.ws){\n        properties.ws.send(JSON.stringify({\n          'message': String(index),\n          'name': properties.name\n        }))        \n      }\n\n    }\n    \n    set(i => {\n      if (index !== i) return\n      const isGone = gone.has(index)\n      const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0\n      const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0)\n      const scale = down ? 1.1 : 1 \n      return { x, rot, scale, delay: undefined, config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 } }\n    })\n    if (!down && gone.size === cards.length && 0) setTimeout(() => {\n      gone.clear()\n      set(i => to(i))\n    }, 600)\n  })\n\n  return props.map(({ x, y, rot, scale, zIndex }, i) => (\n    <animated.div key={i} style={{ zIndex, transform: interpolate([x, y], (x, y) => `translate3d(${x}px,${y}px,0)`) }}>\n      <animated.div {...bind(i)} style={{ zIndex, transform: interpolate([rot, scale], trans), backgroundImage: `url(${cards[i]})` }} />\n    </animated.div>\n  ))\n}\n\n\n\n\n\nclass Panel extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      button_type: \"Random\"\n    };\n  }\n\n  handel_button_click(){\n    this.return_value()\n  }\n\n  handel_input_change(){\n    let channel_name = document.getElementById(\"channel_input\").value\n    if (channel_name === \"\") {\n      this.setState({button_type: \"Random\"})\n    } else {\n      this.setState({button_type: \"Connect\"})\n    }\n  }\n\n  return_value(){\n    let channel_name = document.getElementById(\"channel_input\").value\n    if (channel_name === \"\") {\n      channel_name = String(parseInt(Math.random()*10000))\n      document.getElementById(\"channel_input\").value = channel_name\n    } \n    this.props.try_to_connect(channel_name)\n    this.setState({button_type: \"Connected on:\"})\n  }\n  \n\n  render() {\n    return (\n      <span className=\"panel\">\n        <button onClick={() => this.handel_button_click()}>\n          {this.state.button_type}\n        </button>\n        <input id=\"channel_input\" onChange={() => this.handel_input_change()} />\n      </span>\n    )\n  }\n}\n\nclass Controller extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update_back_number = this.update_back_number.bind(this);\n    this.try_to_connect = this.try_to_connect.bind(this);\n    this.state = {\n      ws: null,\n      back_number: new Set(),\n      name: String(parseInt(Math.random()*100000000)),\n      clear: false,\n      connected: false\n    };\n  }\n\n  try_to_connect(channel){\n    let path = \"ws://ws.fastbreakfast.top/ws/chat/\"\n    path = path + channel + \"/\"\n    try {this.state.ws.close();} catch (error) {}\n    let ws = new WebSocket(path)\n\n    ws.onopen = () => {\n      this.setState({ ws: ws });\n      console.log('connected on:' + path)\n    }\n\n    ws.onmessage = evt => {\n      let data = JSON.parse(evt.data)\n      console.log(data)\n      if (data.name !== this.state.name) {\n        if (data.message === 'clear') {\n          this.setState({clear: true})\n        } else if (data.message.startsWith('number ')) {\n          let number = data.message.split(' ')[1]\n          if (parseInt(number) > 2 && !this.state.connected) {\n            console.log('FULL')\n            ws.close()\n            this.setState({connected: false})\n          } else if (parseInt(number) == 2 && !this.state.connected){\n            this.setState({clear: true, connected: true})\n          } else {\n            this.setState({connected: true})\n          }\n        } else {\n          let message = data.message\n          message = new Set(message)\n          message = to_int(message)\n          this.setState({back_number: message})\n        }\n      }\n    }\n\n    ws.onclose = () => {\n      this.setState({connected: false})\n      console.log('disconnected')\n    }\n  }\n  \n  update_back_number(gone){\n    this.setState({back_number: gone});\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Panel \n          try_to_connect={this.try_to_connect}\n        />\n        <Deck \n          data={this.state.back_number} \n          ws={this.state.ws} \n          name={this.state.name}\n          clear={this.state.clear}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nrender(<Controller />, document.getElementById('root'))\n"],"sourceRoot":""}